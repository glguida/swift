/* Model file for balls in an urn, allowing observation errors. 
 * This version uses a Poisson prior for the number of balls.
 */

type Ball;
type Draw;
type Color;

distinct Color Blue, Green;
distinct Draw Draw[10];

#Ball ~ UniformInt(1,20);

random Color TrueColor(Ball b) ~ Categorical({Blue -> 0.9, Green -> 0.1});

random Ball BallDrawn(Draw d) ~ UniformChoice({b for Ball b});

random Color ObsColor(Draw d) ~
    case TrueColor(BallDrawn(d)) in {
      Blue -> Categorical({Blue -> 0.9, Green -> 0.1}),
      Green -> Categorical({Blue -> 0.1, Green -> 0.9})
    };

/* Evidence file asserting that the drawn balls appeared blue on half the 
 * draws and green on half the draws.
 */

obs ObsColor(Draw[0]) = Green;
obs ObsColor(Draw[1]) = Green;
obs ObsColor(Draw[2]) = Green;
obs ObsColor(Draw[3]) = Green;
obs ObsColor(Draw[4]) = Green;
obs ObsColor(Draw[5]) = Green;
obs ObsColor(Draw[6]) = Green;
obs ObsColor(Draw[7]) = Green;
obs ObsColor(Draw[8]) = Green;
obs ObsColor(Draw[9]) = Blue;

/* Query file asking for the total number of balls in the urn.
 */
query size({b for Ball b});

